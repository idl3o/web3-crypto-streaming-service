version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    container_name: web3-crypto-streaming-app-prod
    restart: always
    environment:
      - NODE_ENV=production
    env_file:
      - .env.production
    networks:
      - web3-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  ipfs:
    image: ipfs/kubo:latest
    container_name: web3-crypto-ipfs-prod
    restart: always
    volumes:
      - ipfs_data:/data/ipfs
      - ipfs_export:/export
    environment:
      - IPFS_PROFILE=server
    ports:
      - "5001:5001" # API
      - "8081:8080" # Gateway
    networks:
      - web3-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: web3-crypto-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl
      - ./docker/certbot:/etc/letsencrypt
      - ./dist:/usr/share/nginx/html
    depends_on:
      - app
    networks:
      - web3-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M

  certbot:
    image: certbot/certbot
    container_name: web3-crypto-certbot
    volumes:
      - ./docker/certbot:/etc/letsencrypt
      - ./docker/www:/var/www/html
    command: certonly --webroot -w /var/www/html --email admin@example.com -d example.com -d www.example.com --agree-tos
    depends_on:
      - nginx

networks:
  web3-network:
    driver: bridge

volumes:
  ipfs_data:
  ipfs_export:
